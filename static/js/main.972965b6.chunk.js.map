{"version":3,"sources":["logo.svg","AppClass.js","reportWebVitals.js","index.js"],"names":["App","props","initClass","a","tf","window","inited","textElement","document","getElementById","log","txt","innerHTML","loadLayersModel","model","console","w","h","inputs","shape","inputLayers","batchInputShape","inputSpec","feedInputShapes","internalInputShapes","DeviceMotionEvent","requestPermission","orient","addEventListener","event","beta","navigator","mediaDevices","getUserMedia","video","aspectRatio","ideal","facingMode","stream","srcObject","play","canvas","getContext","update","result","tidy","image","browser","fromPixels","expandDims","div","resizeBilinear","time","Date","predict","tensor","Float32Array","map","v","out1","reshape","slice","dataSync","viz","y","x","maxv","maxs","i","Math","pow","max","dx","min","dy","maximum","minimum","toInt","err","message","toPixels","then","dispose","requestAnimationFrame","catch","initImg","Promise","res","img","Image","onload","src","this","className","id","style","maxHeight","onClick","init","error","body","innerText","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.972965b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport logo from './logo.svg';\nimport './App.css';\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.inited = false;\n\n  }\n  initClass = async () => {\n    let tf = window.tf;\n    if (this.inited) {\n      return;\n    }\n    this.inited = true;\n    let textElement = document.getElementById('log')\n    let log = (txt) => {\n      textElement.innerHTML += (txt + '\\n');\n    }\n    log('started')\n    try {\n      let model = await tf.loadLayersModel('/NormalMapTFJS/modelClassOrient/model.json');\n      console.log(model);\n      let w = 64\n      let h = 64\n      model.inputs[0].shape = [null, h * 8, w * 8, 3]\n      model.inputLayers[0].batchInputShape = [null, h * 8, w * 8, 3]\n      model.inputLayers[0].inputSpec[0].shape = [null, h * 8, w * 8, 3]\n      model.feedInputShapes[0] = [null, h * 8, w * 8, 3]\n      model.internalInputShapes[0] = [null, h * 8, w * 8, 3]\n      model.inputs[1].shape = [null, h / 16, w / 16, 1]\n      model.inputLayers[1].batchInputShape = [null, h / 16, w / 16, 1]\n      model.inputLayers[1].inputSpec[0].shape = [null, h / 16, w / 16, 1]\n      model.feedInputShapes[1] = [null, h / 16, w / 16, 1]\n      model.internalInputShapes[1] = [null, h / 16, w / 16, 1]\n      if (\n        DeviceMotionEvent &&\n        typeof DeviceMotionEvent.requestPermission === \"function\"\n      ) {\n        DeviceMotionEvent.requestPermission();\n      }\n\n      let orient = 0\n      window.addEventListener(\"deviceorientation\", (event) => {\n        orient = (event.beta - 90) / 180\n      });\n\n      log('loaded')\n      let stream = await navigator.mediaDevices.getUserMedia({ video: { aspectRatio: { ideal: 1 }, facingMode: \"environment\" } })\n\n      log('capture')\n      let video = document.getElementById('video')\n      video.srcObject = stream;\n      await video.play()\n      let canvas = document.getElementById('result')\n      let ctx = canvas.getContext('2d');\n\n      let update = () => {\n        let result = tf.tidy(() => {\n          log('req')\n          try {\n            let image = tf.browser.fromPixels(video).expandDims().div(255)\n\n            //if(image.shape[2]!==1024|| image.shape[1]!==768){\n            image = tf.image.resizeBilinear(image, [512, 512])\n            //}\n            log('req1')\n            let time = new Date()\n            let result = model.predict([image, tf.tensor(new Float32Array((h / 16) * (w / 16)).map(v => orient), [1, h / 16, w / 16, 1])]);\n            log('req2')\n            result = result.reshape(result.shape.slice(1)).slice([0, 0, 0], [h, w, 36])\n            let out1 = result.dataSync()\n            console.log('t', new Date() - time);\n            let viz = new Float32Array(h * w * 3)\n\n            for (let y = 0; y !== h; y++) {\n              for (let x = 0; x !== w; x++) {\n                let maxv = 0\n                let maxs = 0\n                for (let i = 0; i !== 18; i++) {\n                  if (maxv < out1[y * w * 36 + x * 36 + i]) {\n                    maxv += i * Math.pow(Math.max(out1[y * w * 36 + x * 36 + i], 0), 2)\n                    maxs += Math.pow(Math.max(out1[y * w * 36 + x * 36 + i], 0), 2)\n                  }\n                }\n                let dx = Math.min(Math.max((maxv / maxs) * 15, 0), 255)\n                maxv = 0\n                maxs = 0\n                for (let i = 0; i !== 18; i++) {\n                  if (maxv < out1[y * w * 36 + x * 36 + i + 18]) {\n                    maxv += i * Math.pow(Math.max(out1[y * w * 36 + x * 36 + i + 18], 0), 2)\n                    maxs += Math.pow(Math.max(out1[y * w * 36 + x * 36 + i + 18], 0), 2)\n                  }\n                }\n                let dy = Math.min(Math.max((maxv / maxs) * 15, 0), 255)\n\n                viz[y * w * 3 + x * 3 + 0] = dx\n                viz[y * w * 3 + x * 3 + 1] = dy\n                viz[y * w * 3 + x * 3 + 2] = 0\n              }\n            }\n            let rest = tf.tensor(viz, [h, w, 3], 'int32').maximum(0).minimum(255).toInt()\n\n            return rest;\n          } catch (err) {\n            console.log('err: ', err);\n\n            log(err.message)\n          }\n        })\n        console.log(result, canvas);\n        tf.browser.toPixels(result, canvas).then(() => {\n          log('req3')\n          result.dispose();\n          requestAnimationFrame(update)\n        }).catch(err => {\n          log(err.message)\n        })\n      }\n\n      requestAnimationFrame(update)\n    } catch (err) {\n      log(err.message)\n    }\n  }\n  initImg = async () => {\n    let tf = window.tf;\n    if (this.inited) {\n      return;\n    }\n    this.inited = true;\n    let textElement = document.getElementById('but')\n    textElement.innerHTML = 'started'\n    let model = await tf.loadLayersModel('/NormalMapTFJS/modelClassOrient/model.json');\n    console.log(model);\n    let w = 64\n    let h = 64\n    model.inputs[0].shape = [null, h * 8, w * 8, 3]\n    model.inputLayers[0].batchInputShape = [null, h * 8, w * 8, 3]\n    model.inputLayers[0].inputSpec[0].shape = [null, h * 8, w * 8, 3]\n    model.feedInputShapes[0] = [null, h * 8, w * 8, 3]\n    model.internalInputShapes[0] = [null, h * 8, w * 8, 3]\n    model.inputs[1].shape = [null, h / 16, w / 16, 1]\n    model.inputLayers[1].batchInputShape = [null, h / 16, w / 16, 1]\n    model.inputLayers[1].inputSpec[0].shape = [null, h / 16, w / 16, 1]\n    model.feedInputShapes[1] = [null, h / 16, w / 16, 1]\n    model.internalInputShapes[1] = [null, h / 16, w / 16, 1]\n\n    textElement.innerHTML = 'loaded'\n    let img = await new Promise((res) => { let img = new Image(); img.onload = () => res(img); img.src = '/NormalMapTFJS/test.png' })\n\n\n    textElement.innerHTML = 'capture'\n\n    let canvas = document.getElementById('result')\n    let ctx = canvas.getContext('2d');\n\n\n    let update = () => {\n      let result = tf.tidy(() => {\n        textElement.innerHTML = 'req'\n        try {\n          let image = tf.browser.fromPixels(img).expandDims().div(255)\n\n          //if(image.shape[2]!==1024|| image.shape[1]!==768){\n          image = tf.image.resizeBilinear(image, [h * 8, w * 8])\n          //}\n          let time = new Date()\n          let result = model.predict([image, tf.tensor(new Float32Array((h / 16) * (w / 16)).map(v => 0.1), [1, h / 16, w / 16, 1])]);\n\n          result = result.reshape(result.shape.slice(1)).slice([0, 0, 0], [h, w, 36])\n          let out1 = result.dataSync()\n          console.log('t', new Date() - time);\n          let viz = new Float32Array(h * w * 3)\n\n          for (let y = 0; y !== h; y++) {\n            for (let x = 0; x !== w; x++) {\n              let maxv = 0;\n              let maxs = 0;\n              for (let i = 0; i !== 18; i++) {\n                if (maxv < out1[y * w * 36 + x * 36 + i]) {\n                  maxv += i * Math.pow(Math.max(out1[y * w * 36 + x * 36 + i], 0), 2)\n                  maxs += Math.pow(Math.max(out1[y * w * 36 + x * 36 + i], 0), 2)\n                }\n              }\n              let dx = Math.min(Math.max((maxv / maxs) * 15, 0), 255)\n              maxv = 0\n              maxs = 0\n              for (let i = 0; i !== 18; i++) {\n                if (maxv < out1[y * w * 36 + x * 36 + i + 18]) {\n                  maxv += i * Math.pow(Math.max(out1[y * w * 36 + x * 36 + i + 18], 0), 2)\n                  maxs += Math.pow(Math.max(out1[y * w * 36 + x * 36 + i + 18], 0), 2)\n                }\n              }\n              let dy = Math.min(Math.max((maxv / maxs) * 15, 0), 255)\n\n              viz[y * w * 3 + x * 3 + 0] = dx\n              viz[y * w * 3 + x * 3 + 1] = dy\n              viz[y * w * 3 + x * 3 + 2] = 0\n            }\n          }\n          let rest = tf.tensor(viz, [h, w, 3], 'int32').maximum(0).minimum(255).toInt()\n\n          return rest;\n        } catch (err) {\n          console.log('err: ', err);\n\n          textElement.innerHTML = err.message\n        }\n      })\n      tf.browser.toPixels(result, canvas).then(() => {\n        textElement.innerHTML = 'req3'\n        result.dispose();\n        requestAnimationFrame(update)\n      }).catch(err => {\n        textElement.innerHTML = err.message\n      })\n    }\n\n    requestAnimationFrame(update)\n\n  }\n  render() {\n    console.log(this);\n    return (\n      <div className=\"App\">\n        <video id='video' style={{ maxHeight: '200px' }}></video>\n        <canvas id='result'></canvas>\n        <div id=\"but\" onClick={() => {\n          this.init().catch(err => { console.error(err); document.body.innerText = err.message })\n        }}>Play(v4)</div>\n\n        <div id=\"but2\" onClick={() => {\n          this.initImg().catch(err => { console.error(err); document.body.innerText = err.message })\n        }}>imgClass</div>\n\n        <div id=\"but\" onClick={() => {\n          this.initClass().catch(err => { console.error(err); document.body.innerText = err.message })\n        }}>PlayClass</div>\n\n        <pre id=\"log\">\n\n        </pre>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './AppClass';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}